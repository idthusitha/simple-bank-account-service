plugins {
	id 'org.springframework.boot' version '2.4.5'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'com.bmuschko.docker-remote-api' version '6.6.1'
}

group = 'com.bank.account'
version = 'latest'
sourceCompatibility = '11'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-elasticsearch'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	
	
	//test NG
	compile group: 'org.springframework.boot', name: 'spring-boot-starter-parent', version: '1.5.10.RELEASE'
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-test'
	compile group: 'org.testng', name: 'testng', version: '6.14.3'
	
	//Security
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-security', version: '2.4.5'
	compile group: 'commons-codec', name: 'commons-codec', version: '1.15'
	
	
		
	//Jackson Data Bind
	implementation 'com.fasterxml.jackson.core:jackson-databind:2.11.1'
	
	//Elasticsearch
	implementation 'org.springframework.data:spring-data-elasticsearch:4.1.6'
	
	compile 'io.springfox:springfox-swagger2:2.6.1'
	compile 'io.springfox:springfox-swagger-ui:2.6.1'
	
	//Test API
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
}

test {	
	useTestNG(){
		//includeGroups 'smoke', 'sanity'
		//excludeGroups 'regression'
		
		// runlist to executed. path is relative to current folder
		suites 'src/test/resources/testing.xml'
		
		useDefaultListeners = true
		
		reports.html.setDestination(file("test-output"))		
		
	}	
	testLogging {
		events "PASSED", "FAILED", "SKIPPED"
	}
}

import com.bmuschko.gradle.docker.tasks.image.*
task buildDocker(type: DockerBuildImage, dependsOn: build) {
	inputDir = file('docker')
	images.add('test/simple-bank-account-service')
	doFirst {
		copy {
			from 'build/libs'
			into 'docker'
		}
	}
}
